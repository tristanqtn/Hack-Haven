export memory a(initial: 256, max: 256);

global g_a:int = 66592;

export table e:funcref(min: 1, max: 1);

data d_3Lc374_0LUUMKD155Z(offset: 1024) = "3{Lc374_0LU}UMKD155Z";
data d_b(offset: 1049) = "\04";

export function b() {
}

function f_b(a:int):int {
  var b:ubyte_ptr;
  var c:int_ptr;
  b = a;
  if (eqz(b & 3)) goto B_b;
  if (eqz(b[0])) { return 0 }
  loop L_d {
    b = b + 1;
    if (eqz(b & 3)) goto B_b;
    if (b[0]) continue L_d;
  }
  goto B_a;
  label B_b:
  loop L_e {
    c = b;
    b = c + 4;
    var d:int = c[0];
    if (eqz(((d ^ -1) & d - 16843009) & -2139062144)) continue L_e;
  }
  loop L_f {
    b = c;
    c = b + 1;
    if (b[0]) continue L_f;
  }
  label B_a:
  return b - a;
}

export function h(a:int):int {
  a = g_a - a & -16;
  g_a = a;
  return a;
}

export function g(a:int) {
  g_a = a
}

export function f():int {
  return g_a
}

export function d(a:int, b:int):int {
  return 0
}

export function c(a:int):int {
  var c:{ a:ubyte, b:ubyte }
  var d:int;
  return if (f_b(a) == f_b(1048[0]:int)) {
           var b:int = a[16]:ubyte;
           a[16]:byte = a[0]:ubyte;
           a[0]:byte = b;
           b = a[1]:ubyte;
           a[1]:byte = a[5]:ubyte;
           a[5]:byte = b;
           b = a[2]:ubyte;
           a[2]:byte = a[17]:ubyte;
           a[17]:byte = b;
           b = a[3]:ubyte;
           a[3]:byte = a[4]:ubyte;
           a[4]:byte = b;
           b = a[6]:ubyte;
           a[6]:byte = a[9]:ubyte;
           a[9]:byte = b;
           b = a[12]:ubyte;
           a[12]:byte = a[7]:ubyte;
           a[7]:byte = b;
           b = a[14]:ubyte;
           a[14]:byte = a[8]:ubyte;
           a[8]:byte = b;
           b = a[18]:ubyte;
           a[18]:byte = a[10]:ubyte;
           a[10]:byte = b;
           b = a[19]:ubyte;
           a[19]:byte = a[11]:ubyte;
           a[11]:byte = b;
           b = a[0]:ubyte;
           if (eqz(b) | b != (d = (c = 1048[0]:int).a)) goto B_b;
           loop L_c {
             d = c.b;
             b = a[1]:ubyte;
             if (eqz(b)) goto B_b;
             c = c + 1;
             a = a + 1;
             if (b == d) continue L_c;
           }
           label B_b:
           b == d;
         } else {
           0
         }
}